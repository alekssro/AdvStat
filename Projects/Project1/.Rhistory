1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
# source("HMMPoisExpectations.R")
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
lam1 <- 1 ; lam2 <- 3
Lambda <- c(lam1,lam2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=Lambda,ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi sequence",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$)
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
# source("HMMPoisExpectations.R")
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
lam1 <- 1 ; lam2 <- 3
Lambda <- c(lam1,lam2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=Lambda,ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
# source("HMMPoisExpectations.R")
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
lam1 <- 1 ; lam2 <- 3
Lambda <- c(lam1,lam2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=Lambda,ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
# source("HMMPoisExpectations.R")
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
lam1 <- 1 ; lam2 <- 3
Lambda <- c(lam1,lam2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
HMMRes
ViterbiRes
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
HMMRes$PostProb
max.col(HMMRes$PostProb)
HMMRes$Lk[,1]
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a,1-a,1-b,b),byrow=TRUE,nrow=2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
HMMRes$Lik
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a, 1-a,
1-b, b),byrow=TRUE,nrow=2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
bHMMRes$Lik
HMMRes$Lik
HMMRes$Lks
dpoiss1 <- dpois(ObsSeq, EMres$lambda1)
dpoiss2 <- dpois(ObsSeq, EMres$lambda2)
# HMMRes$Lks
bc_1 <- HMMRes$Lks[,1]
bc_2 <- HMMRes$Lks[,2]
p = c()
for (i in 2:length(ObsSeq)) {
p[i] = (bc_1[i]*dpoiss1[i]*TransProb[1, 1]) / bc_1[i-1]
}
p
bc_1
dpoiss1 <- dpois(ObsSeq, EMres$lambda1)
dpoiss2 <- dpois(ObsSeq, EMres$lambda2)
# HMMRes$Lks
bc_1 <- HMMRes$Lks[,1]
bc_2 <- HMMRes$Lks[,2]
p = c()
for (i in 1:length(ObsSeq)) {
p[i] = (bc_1[i]*dpoiss1[i]*TransProb[1, 1]) / bc_1[i-1]
}
p
bc_1[0]
bc_1[1]
dpoiss1 <- dpois(ObsSeq, EMres$lambda1)
dpoiss2 <- dpois(ObsSeq, EMres$lambda2)
# HMMRes$Lks
bc_1 <- HMMRes$Lks[,1]
bc_2 <- HMMRes$Lks[,2]
p = c()
for (i in 1:length(ObsSeq)) {
p[i] = (bc_1[i]*dpoiss1[i]*TransProb[1, 1]) / HMMRes$Lk
}
p
Len <- length(ObsSeq)
a <- HMMRes$TransPrb[1,1]
b <- HMMRes$TransPrb[2,2]
# Emission Probabilities
Emissions_state1 <- dpois(ObsSeq, EMres$lambda1)
Emissions_state2 <- dpois(ObsSeq, EMres$lambda2)
# Likelihood Probabilities in each position
Liks_1 <- HMMRes$Lks[,1]
Liks_2 <- HMMRes$Lks[,2]
Len <- length(ObsSeq)
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p <- (Liks_1[2:Len] * a * Emissions_state1) / Liks_1[1:Len-1]
Liks_1[2:Len]
Liks_1[1:Len-1]
a
Emissions_state1
2:Len
1:Len-1
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p <- (Liks_1[2:Len] * a * Emissions_state1) / Liks_1[1:Len]
Emissions_state1
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p <- (Liks_1[2:Len] * a * Emissions_state1[2:Len]) / Liks_1[1:Len-1]
p
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p1 <- (Liks_1[2:Len] * a * Emissions_state1[2:Len]) / Liks_1[1:Len-1]
Liks_1[2:Len]
p2 <- (Liks_2[2:Len] * a * Emissions_state2[2:Len]) / Liks_2[1:Len-1]
plot(p1)
plot(p2)
Liks_1[1:2]
Liks_1[1]
Liks_1[2]
a <- HMMRes$TransPrb[1,1]
b <- HMMRes$TransPrb[2,2]
# Emission Probabilities
Emissions_state1 <- dpois(ObsSeq, EMres$lambda1)
Emissions_state2 <- dpois(ObsSeq, EMres$lambda2)
# Likelihood Probabilities in each position
BackProbs <- HMMRes$Lks
Len <- length(ObsSeq)
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p1 <- (BackProbs[2:Len, 1] * a * Emissions_state1[2:Len]) / BackProbs[1:Len-1, 1]
p2 <- (BackProbs[2:Len, 2] * a * Emissions_state2[2:Len]) / BackProbs[1:Len-1, 2]
plot(p1)
plot(p2)
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a, 1-a,
1-b, b),byrow=TRUE,nrow=2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
a <- HMMRes$TransPrb[1,1]
b <- HMMRes$TransPrb[2,2]
# Emission Probabilities
Emissions_state1 <- dpois(ObsSeq, EMres$lambda1)
Emissions_state2 <- dpois(ObsSeq, EMres$lambda2)
# Likelihood Probabilities in each position
BackProbs <- HMMRes$Lks
Len <- length(ObsSeq)
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p1 <- (BackProbs[2:Len, 1] * a * Emissions_state1[2:Len]) / BackProbs[1:Len-1, 1]
p2 <- (BackProbs[2:Len, 2] * a * Emissions_state2[2:Len]) / BackProbs[1:Len-1, 2]
plot(p1)
plot(p2)
HMMRes$TransPrb[1,1]
HMMRes$TransPrb[2,2]
BackProbs[,1]
BackProbs[,2]
knitr::opts_chunk$set(echo = TRUE, comment = NA, highlight = F)
library(tidyverse)
source("ASLMiB_Library.R")
# Fetal lamb movement from Handout 5
ObsSeq <- c(0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,
0,1,0,0,0,0,2,2,0,0,0,0,1,0,0,
1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,7,3,2,3,2,4,
0,0,0,0,1,0,0,0,0,0,0,0,1,0,2,
0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
2,1,0,0,1,0,0,0,1,0,1,1,0,0,0,
1,0,0,1,0,0,0,1,2,0,0,0,1,0,1,
1,0,1,0,0,2,0,1,2,1,1,2,1,0,1,
1,0,0,1,1,0,0,0,1,1,1,0,4,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
## Starting values
lambda1Est <- 0.1
lambda2Est <- 3
alphaEst <- 0.5
## Number of iterations
nIter <- 100
EMres <- em2poiss(ObsSeq, alphaEst, lambda1Est, lambda2Est, nIter, stopThres = 0.0001, verbose = F)
cat("Alpha estimate: ", res$alpha, "\nBeta estimate: ", res$beta,
"\nLambda1 estimate: ", res$lambda1, "\nLambda2 estimate: ", res$lambda2)
a <- 0.5 ; b <- 0.5
TransProb <- matrix(c(a, 1-a,
1-b, b),byrow=TRUE,nrow=2)
HMMRes <- HMMPoisExpectationsFct(InitProb=c(0.5,0.5),TransProb=TransProb,Lambda=c(EMres$lambda1, EMres$lambda2),ObsSeq=ObsSeq)
ViterbiRes <- ViterbiPoisFct(InitProb = c(0.5,0.5), TransProb = HMMRes$TransPrb, Lambda = c(EMres$lambda1, EMres$lambda2), ObsSeq = ObsSeq)
## Visualize result
Ln <- length(ObsSeq)
par(mfrow=c(3,1))
plot(1:Ln,ObsSeq,
col="blue",type="l",
main="Observed sequence",
xlab="sequence index",ylab="Observed state")
plot(1:Ln,ViterbiRes$BackTrack,
col="red",type="l",
main="Viterbi decoding",
xlab="sequence index",ylab="Decoded state")
plot(1:Ln, HMMRes$PostDecode,
col="darkgreen",type="l",
main="Posterior decoding",
xlab="sequence index",ylab="Observed state")
a <- HMMRes$TransPrb[1,1]
b <- HMMRes$TransPrb[2,2]
# Emission Probabilities
Emissions_state1 <- dpois(ObsSeq, EMres$lambda1)
Emissions_state2 <- dpois(ObsSeq, EMres$lambda2)
# Likelihood Probabilities in each position
BackProbs <- HMMRes$Lks
Len <- length(ObsSeq)
# Formula in theorem of the PosteriorHMMAnalysis.pdf
p1 <- (BackProbs[2:Len, 1] * a * Emissions_state1[2:Len]) / BackProbs[1:Len-1, 1]
p2 <- (BackProbs[2:Len, 2] * a * Emissions_state2[2:Len]) / BackProbs[1:Len-1, 2]
plot(p1)
plot(p2)
