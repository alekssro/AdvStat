ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
# Illustrate step by step; run from here to line 114 multiple times for multiple steps
rang <- seq(0, max(grades), length.out = 50)
init_theta <- mm$xList[1,]
thetas <- rang
ys <- c() ; gs <- c()
for (i in 1:length(thetas)) {
ys[i] <- sum(abs(grades - thetas[i]))
gs[i] <- 1/2*sum((grades-thetas[i])^2/abs(grades-init_theta[step]) + abs(grades-init_theta[step]))
}
df <- data.frame(thet = thetas, f = ys, g = gs)
p <- df %>% ggplot() +
geom_bar(data = kidsdata, aes(x = grades)) +
geom_line(aes(x = thet, y = f, color = "f")) +
geom_line(aes(x = thet, y = g, color = "g")) +
geom_vline(aes(xintercept = init_theta[step])) +
ylim(c(0, 1500)) + ylab("y") + ggtitle(paste0('Step ', step)) +
annotate("text", x = init_theta[step] + 0.2, y = 1400, label = expression('h'^'t'))
ggsave(paste0('img/test',step,'.png'), p)
p <- p + geom_vline(aes(xintercept = init_theta[step+1])) +
annotate("text", x = init_theta[step+1] + 0.2, y = 1300, label = expression('h'^'t+1'))
ggsave(paste0('img/test',step,'min.png'), p)
step = step + 1
xList <- mm$xList
xList
true_val <- median(y)
mm_kids <- MajorizeMinimizeMedian(grades, 10)
xList <- mm_kids$xList
true_val <- median(grades)
y_axis <- c()
x_axis <- c()
for(i in 1:length(xList)){
jpeg(paste0('img/kids_ex',i,'.jpg'))
x_axis <- c(x_axis, i)
y_axis <- c(y_axis, xList[i])
plot(c(x_axis, 50), c(y_axis, true_val), pch=19,col="blue",cex=0.8, main="Finding a Sample Median", xlab="", ylab="", ylim=c(0, 50), xlim=c(0,50))
lines(x_axis, y_axis, col="blue")
abline(v=0,col="red")
dev.off()
}
###
hist(grades)
median(grades)
mm_kids <- MajorizeMinimizeMedian(grades, 0)
mm_kids$x
mm_kids
